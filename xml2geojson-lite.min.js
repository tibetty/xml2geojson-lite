let xml2geojson=e=>{e=(e=>e.replace(/<!--[^]+?-->/g,""))(e);let l=e=>e[0],t=e=>e[e.length-1],r=(e,l,t)=>{let r=e[l];r?r.push(t):e[l]=[t]},o=(e,l,t)=>{let r=e[l];r&&r.splice(r.indexOf(t),1)},n=(e,l)=>{let t=e[l];return t&&t.length>0?t[0]:null},s=e=>e.join(","),c=[],u={},p={},i=[],f={},g={},a=/(<member type="way" ref=".+" role=".+">[^]+?<\/member>)/g,h=null;for(;h=a.exec(e);){let e=h[0],o=c,n=u,a=p;/<member type="way" ref=".+" role="inner">/g.test(e)&&(o=i,n=f,a=g);let m=/<nd lat="([\d\.]+)" lon="([\d\.]+)"\/>/g,d=null,y=[];for(;d=m.exec(e);)y.push([d[2],d[1]]);o.push(y),r(n,s(l(y)),y),r(a,s(t(y)),y)}let m=(e,r,c,u)=>{let p=e=>s(l(e))===s(t(e)),i=e=>e instanceof Array?e.map(i):parseFloat(e),f=(e,l,t)=>{l=l||0,t=t||1;let r=e.reduce((l,t,r)=>e[l][0]>t[0]?l:r,0),o=r<=0?e.length-1:r-1,n=r>=e.length-1?0:r+1,s=e[o][l],c=e[r][l],u=e[n][l],p=e[o][t],i=e[r][t];return(c-s)*(e[n][t]-p)-(u-s)*(i-p)<0?"clockwise":"counterclockwise"},g=[],a=null;for(;a=e.pop();)if(o(r,s(l(a)),a),o(c,s(t(a)),a),p(a))f(a=i(a))!==u&&a.reverse(),g.push(a);else{let h=[],m=a,d=!1;for(;m;){h=h.concat(m);let u=s(t(h));d=!1,(m=n(r,u))||(m=n(c,u),d=!0),m&&(e.splice(e.indexOf(m),1),o(r,s(l(m)),m),o(c,s(t(m)),m),d&&m.reverse(),m=m.slice(1))}p(h)&&(f(h=i(h))!==u&&h.reverse(),g.push(h))}return g},d=m(c,u,p,"counterclockwise"),y=m(i,f,g,"clockwise"),x=(e,l,t,r)=>{t=t||0,r=r||1;let o=!1;for(let n=0,s=l.length-1;n<l.length;s=n++)(l[n][t]<=e[t]&&e[t]<l[s][t]||l[s][t]<=e[t]&&e[t]<l[n][t])&&e[r]<(l[s][r]-l[n][r])*(e[t]-l[n][t])/(l[s][t]-l[n][t])+l[n][r]&&(o=!o);return o},w=[];for(let e in d)w[e]=[d[e]];let k=null;for(;k=y.pop();)for(let e in d)if(x(l(k),d[e])){w[e].push(k);break}return 1===w.length?{type:"Polygon",coordinates:w[0]}:{type:"MultiPolygon",coordinates:w}};module&&(module.exports=xml2geojson);